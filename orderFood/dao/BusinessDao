package com.example.orderfood.dao

import androidx.room.Dao
import androidx.room.Delete
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import androidx.room.Update
import com.example.orderfood.entity.Business

@Dao
interface BusinessDao {
    // 获取所有商家
    @Query("SELECT * FROM businesses")
    suspend fun getAllBusinesses(): List<Business>

    // 按ID获取单个商家
    @Query("SELECT * FROM businesses WHERE business_id = :businessId")
    suspend fun getBusinessById(businessId: String): Business?

    // 插入商家
    @Insert(onConflict = OnConflictStrategy.ABORT)
    suspend fun insert(business: Business)

    // 检查商家ID是否存在
    @Query("SELECT COUNT(*) FROM businesses WHERE business_id = :businessId")
    suspend fun businessIdExists(businessId: String): Int

    // 更新商家信息
    @Update
    suspend fun update(business: Business)

    // 删除商家实体
    @Delete
    suspend fun delete(business: Business): Int

    // 按ID删除商家
    @Query("DELETE FROM businesses WHERE business_id = :businessId")
    suspend fun deleteByBusinessId(businessId: String): Int

    // 按类型搜索商家（可选）
    @Query("SELECT * FROM businesses WHERE type LIKE :type")
    suspend fun getBusinessesByType(type: String): List<Business>

    // 按名称搜索商家（可选）
    @Query("SELECT * FROM businesses WHERE name LIKE :name")
    suspend fun searchBusinessesByName(name: String): List<Business>
}
